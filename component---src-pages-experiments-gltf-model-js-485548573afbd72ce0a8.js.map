{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.promise.finally.js","webpack:///./node_modules/three/examples/jsm/loaders/GLTFLoader.js","webpack:///./node_modules/three/examples/jsm/loaders/DRACOLoader.js","webpack:///./src/components/scenes/GltfModelScene.js","webpack:///./src/pages/experiments/gltf-model.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js"],"names":["$export","core","global","speciesConstructor","promiseResolve","P","R","onFinally","C","this","Promise","isFunction","then","x","e","GLTFLoader","manager","call","dracoLoader","ddsLoader","GLTFRegistry","objects","get","key","add","object","remove","removeAll","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","resourcePath","scope","path","extractUrlBase","itemStart","_onError","console","error","itemError","itemEnd","loader","setPath","setResponseType","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","undefined","asset","version","Error","extensionsUsed","i","length","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","warn","GLTFParser","name","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","color","fromArray","range","type","target","position","set","distance","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","resolve","getMaterialType","extendParams","materialParams","materialDef","parser","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","push","assignTexture","all","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","body","headerView","DataView","header","magic","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","specularGlossinessParams","pbrSpecularGlossiness","shader","uniforms","clone","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","fragmentShader","replace","roughness","metalness","roughnessMap","metalnessMap","specular","value","setHex","glossiness","specularMap","glossinessMap","vertexShader","defines","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","params","material","fog","transparent","isGLTFSpecularGlossinessMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","derivatives","cloneMaterial","source","il","isColor","refreshUniforms","renderer","scene","camera","geometry","uvScaleMap","diffuse","copy","multiplyScalar","isWebGLRenderTarget","texture","matrixAutoUpdate","updateMatrix","uvTransform","matrix","flipEnvMap","isCubeTexture","reflectivity","maxMipLevel","properties","__maxMipLevel","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","decodeDracoFile","attribute","extendTexture","transform","offset","rotation","scale","repeat","texCoord","needsUpdate","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","9729","9984","9985","9986","9987","WEBGL_WRAPPINGS","33071","33648","10497","WEBGL_TYPE_SIZES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","STEP","ALPHA_MODES","MIME_TYPE_FORMATS","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","keys","sort","options","cache","primitiveCache","textureLoader","setCrossOrigin","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","setAttribute","gltfAttributeName","indices","setIndex","box","min","max","targets","vector","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","getCenter","center","radius","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","addMorphTargets","toTrianglesDrawMode","drawMode","getIndex","getAttribute","count","numberOfTriangles","newIndices","getX","newGeometry","markDefs","getDependencies","dependencies","scenes","animations","cameras","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","window","webkitURL","textureDef","textures","textureExtensions","sourceURI","images","isObjectURL","blob","Blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","sizeAttenuation","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","flatShading","morphTargets","uv2","uv","onBeforeRender","y","materialIndex","materialType","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","mode","cached","promise","meshIndex","depthTest","results","geometries","skinWeight","normalizeSkinWeights","group","cameraIndex","cameraDef","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","j","jl","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","instanceNum","children","o","light","sanitizeNodeName","applyMatrix","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","matrixWorld","child","sceneIndex","sceneDef","nodeIds","decoderPath","decoderConfig","decoderBinary","decoderPending","workerLimit","workerPool","workerNextTaskID","workerSourceURL","defaultAttributeIDs","defaultAttributeTypes","setDecoderPath","setDecoderConfig","config","setWorkerLimit","setVerbosity","setDrawMode","setSkipDequantization","_this","taskConfig","attributeIDs","attributeTypes","useUniqueIDs","decodeGeometry","callback","_this2","worker","taskKey","stringify","taskCache","has","cachedTask","taskID","taskCost","geometryPending","_getWorker","_worker","_callbacks","postMessage","message","_createGeometry","_releaseTask","geometryData","_loadLibrary","responseType","_initDecoder","_this3","useJS","WebAssembly","librariesPending","libraries","jsContent","wasmBinary","fn","DRACOWorker","toString","substring","lastIndexOf","_this4","Worker","_taskCosts","_taskLoad","onmessage","a","b","debug","log","dispose","terminate","decodeAttribute","draco","decoder","dracoGeometry","attributeType","dracoArray","numComponents","num_components","numValues","num_points","DracoFloat32Array","GetAttributeFloatForAllPoints","DracoInt8Array","GetAttributeInt8ForAllPoints","DracoInt16Array","GetAttributeInt16ForAllPoints","Int32Array","DracoInt32Array","GetAttributeInt32ForAllPoints","DracoUInt8Array","GetAttributeUInt8ForAllPoints","DracoUInt16Array","GetAttributeUInt16ForAllPoints","DracoUInt32Array","GetAttributeUInt32ForAllPoints","GetValue","destroy","onModuleLoaded","DracoDecoderModule","module","Decoder","decoderBuffer","DecoderBuffer","Init","decodingStatus","geometryType","GetEncodedGeometryType","TRIANGULAR_MESH","Mesh","DecodeBufferToMesh","POINT_CLOUD","PointCloud","DecodeBufferToPointCloud","ok","ptr","error_msg","attributeID","self","GetAttributeByUniqueId","GetAttributeId","GetAttribute","numFaces","num_faces","indexArray","GetFaceFromMesh","attr","WeakMap","releaseDecoderModule","getDecoderModule","modelUrl","getPrefixedPath","skullPosition","lookAt","THREE","fallback","Skull","useLoader","DRACOLoader","ref","React","useRef","useFrame","current","width","height","title","aFunction","anObject","isObject","fails","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","$args","apply","proto","instance","Function"],"mappings":"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","file":"component---src-pages-experiments-gltf-model-js-485548573afbd72ce0a8.js","sourcesContent":["// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","import \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.typed.float32-array\";\nimport \"core-js/modules/es6.typed.uint32-array\";\nimport \"core-js/modules/es6.typed.uint16-array\";\nimport \"core-js/modules/es6.typed.int16-array\";\nimport \"core-js/modules/es6.typed.int8-array\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.string.repeat\";\nimport \"core-js/modules/es6.typed.data-view\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.typed.uint8-array\";\nimport \"core-js/modules/es6.object.create\";\nimport \"core-js/modules/es6.object.assign\";\n\n/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\nimport { AnimationClip, Bone, Box3, BufferAttribute, BufferGeometry, ClampToEdgeWrapping, Color, DirectionalLight, DoubleSide, FileLoader, FrontSide, Group, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, Line, LineBasicMaterial, LineLoop, LineSegments, LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, Loader, LoaderUtils, Material, Math as _Math, Matrix4, Mesh, MeshBasicMaterial, MeshStandardMaterial, MirroredRepeatWrapping, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NumberKeyframeTrack, Object3D, OrthographicCamera, PerspectiveCamera, PointLight, Points, PointsMaterial, PropertyBinding, QuaternionKeyframeTrack, RGBAFormat, RGBFormat, RepeatWrapping, Scene, ShaderLib, ShaderMaterial, Skeleton, SkinnedMesh, Sphere, SpotLight, TextureLoader, TriangleFanDrawMode, TriangleStripDrawMode, UniformsUtils, Vector2, Vector3, VectorKeyframeTrack, VertexColors, sRGBEncoding } from \"../../../build/three.module.js\";\n\nvar GLTFLoader = function () {\n  function GLTFLoader(manager) {\n    Loader.call(this, manager);\n    this.dracoLoader = null;\n    this.ddsLoader = null;\n  }\n\n  GLTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: GLTFLoader,\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var resourcePath;\n\n      if (this.resourcePath !== '') {\n        resourcePath = this.resourcePath;\n      } else if (this.path !== '') {\n        resourcePath = this.path;\n      } else {\n        resourcePath = LoaderUtils.extractUrlBase(url);\n      } // Tells the LoadingManager to track an extra item, which resolves after\n      // the model is fully loaded. This means the count of items loaded will\n      // be incorrect, but ensures manager.onLoad() does not fire early.\n\n\n      scope.manager.itemStart(url);\n\n      var _onError = function _onError(e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      };\n\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(this.path);\n      loader.setResponseType('arraybuffer');\n\n      if (scope.crossOrigin === 'use-credentials') {\n        loader.setWithCredentials(true);\n      }\n\n      loader.load(url, function (data) {\n        try {\n          scope.parse(data, resourcePath, function (gltf) {\n            onLoad(gltf);\n            scope.manager.itemEnd(url);\n          }, _onError);\n        } catch (e) {\n          _onError(e);\n        }\n      }, onProgress, _onError);\n    },\n    setDRACOLoader: function setDRACOLoader(dracoLoader) {\n      this.dracoLoader = dracoLoader;\n      return this;\n    },\n    setDDSLoader: function setDDSLoader(ddsLoader) {\n      this.ddsLoader = ddsLoader;\n      return this;\n    },\n    parse: function parse(data, path, onLoad, onError) {\n      var content;\n      var extensions = {};\n\n      if (typeof data === 'string') {\n        content = data;\n      } else {\n        var magic = LoaderUtils.decodeText(new Uint8Array(data, 0, 4));\n\n        if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\n          try {\n            extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\n          } catch (error) {\n            if (onError) onError(error);\n            return;\n          }\n\n          content = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\n        } else {\n          content = LoaderUtils.decodeText(new Uint8Array(data));\n        }\n      }\n\n      var json = JSON.parse(content);\n\n      if (json.asset === undefined || json.asset.version[0] < 2) {\n        if (onError) onError(new Error('THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.'));\n        return;\n      }\n\n      if (json.extensionsUsed) {\n        for (var i = 0; i < json.extensionsUsed.length; ++i) {\n          var extensionName = json.extensionsUsed[i];\n          var extensionsRequired = json.extensionsRequired || [];\n\n          switch (extensionName) {\n            case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n              extensions[extensionName] = new GLTFLightsExtension(json);\n              break;\n\n            case EXTENSIONS.KHR_MATERIALS_UNLIT:\n              extensions[extensionName] = new GLTFMaterialsUnlitExtension();\n              break;\n\n            case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n              extensions[extensionName] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n              break;\n\n            case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n              extensions[extensionName] = new GLTFDracoMeshCompressionExtension(json, this.dracoLoader);\n              break;\n\n            case EXTENSIONS.MSFT_TEXTURE_DDS:\n              extensions[extensionName] = new GLTFTextureDDSExtension(this.ddsLoader);\n              break;\n\n            case EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n              extensions[extensionName] = new GLTFTextureTransformExtension();\n              break;\n\n            case EXTENSIONS.KHR_MESH_QUANTIZATION:\n              extensions[extensionName] = new GLTFMeshQuantizationExtension();\n              break;\n\n            default:\n              if (extensionsRequired.indexOf(extensionName) >= 0) {\n                console.warn('THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".');\n              }\n\n          }\n        }\n      }\n\n      var parser = new GLTFParser(json, extensions, {\n        path: path || this.resourcePath || '',\n        crossOrigin: this.crossOrigin,\n        manager: this.manager\n      });\n      parser.parse(onLoad, onError);\n    }\n  });\n  /* GLTFREGISTRY */\n\n  function GLTFRegistry() {\n    var objects = {};\n    return {\n      get: function get(key) {\n        return objects[key];\n      },\n      add: function add(key, object) {\n        objects[key] = object;\n      },\n      remove: function remove(key) {\n        delete objects[key];\n      },\n      removeAll: function removeAll() {\n        objects = {};\n      }\n    };\n  }\n  /*********************************/\n\n  /********** EXTENSIONS ***********/\n\n  /*********************************/\n\n\n  var EXTENSIONS = {\n    KHR_BINARY_GLTF: 'KHR_binary_glTF',\n    KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n    KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n    KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n    KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n    KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n    KHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n    MSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n  };\n  /**\n   * DDS Texture Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n   *\n   */\n\n  function GLTFTextureDDSExtension(ddsLoader) {\n    if (!ddsLoader) {\n      throw new Error('THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader');\n    }\n\n    this.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n    this.ddsLoader = ddsLoader;\n  }\n  /**\n   * Punctual Lights Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n   */\n\n\n  function GLTFLightsExtension(json) {\n    this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n    var extension = json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] || {};\n    this.lightDefs = extension.lights || [];\n  }\n\n  GLTFLightsExtension.prototype.loadLight = function (lightIndex) {\n    var lightDef = this.lightDefs[lightIndex];\n    var lightNode;\n    var color = new Color(0xffffff);\n    if (lightDef.color !== undefined) color.fromArray(lightDef.color);\n    var range = lightDef.range !== undefined ? lightDef.range : 0;\n\n    switch (lightDef.type) {\n      case 'directional':\n        lightNode = new DirectionalLight(color);\n        lightNode.target.position.set(0, 0, -1);\n        lightNode.add(lightNode.target);\n        break;\n\n      case 'point':\n        lightNode = new PointLight(color);\n        lightNode.distance = range;\n        break;\n\n      case 'spot':\n        lightNode = new SpotLight(color);\n        lightNode.distance = range; // Handle spotlight properties.\n\n        lightDef.spot = lightDef.spot || {};\n        lightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n        lightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n        lightNode.angle = lightDef.spot.outerConeAngle;\n        lightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n        lightNode.target.position.set(0, 0, -1);\n        lightNode.add(lightNode.target);\n        break;\n\n      default:\n        throw new Error('THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".');\n    } // Some lights (e.g. spot) default to a position other than the origin. Reset the position\n    // here, because node-level parsing will only override position if explicitly specified.\n\n\n    lightNode.position.set(0, 0, 0);\n    lightNode.decay = 2;\n    if (lightDef.intensity !== undefined) lightNode.intensity = lightDef.intensity;\n    lightNode.name = lightDef.name || 'light_' + lightIndex;\n    return Promise.resolve(lightNode);\n  };\n  /**\n   * Unlit Materials Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n   */\n\n\n  function GLTFMaterialsUnlitExtension() {\n    this.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n  }\n\n  GLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n    return MeshBasicMaterial;\n  };\n\n  GLTFMaterialsUnlitExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\n    var pending = [];\n    materialParams.color = new Color(1.0, 1.0, 1.0);\n    materialParams.opacity = 1.0;\n    var metallicRoughness = materialDef.pbrMetallicRoughness;\n\n    if (metallicRoughness) {\n      if (Array.isArray(metallicRoughness.baseColorFactor)) {\n        var array = metallicRoughness.baseColorFactor;\n        materialParams.color.fromArray(array);\n        materialParams.opacity = array[3];\n      }\n\n      if (metallicRoughness.baseColorTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n      }\n    }\n\n    return Promise.all(pending);\n  };\n  /* BINARY EXTENSION */\n\n\n  var BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n  var BINARY_EXTENSION_HEADER_LENGTH = 12;\n  var BINARY_EXTENSION_CHUNK_TYPES = {\n    JSON: 0x4E4F534A,\n    BIN: 0x004E4942\n  };\n\n  function GLTFBinaryExtension(data) {\n    this.name = EXTENSIONS.KHR_BINARY_GLTF;\n    this.content = null;\n    this.body = null;\n    var headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\n    this.header = {\n      magic: LoaderUtils.decodeText(new Uint8Array(data.slice(0, 4))),\n      version: headerView.getUint32(4, true),\n      length: headerView.getUint32(8, true)\n    };\n\n    if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\n      throw new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');\n    } else if (this.header.version < 2.0) {\n      throw new Error('THREE.GLTFLoader: Legacy binary file detected.');\n    }\n\n    var chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\n    var chunkIndex = 0;\n\n    while (chunkIndex < chunkView.byteLength) {\n      var chunkLength = chunkView.getUint32(chunkIndex, true);\n      chunkIndex += 4;\n      var chunkType = chunkView.getUint32(chunkIndex, true);\n      chunkIndex += 4;\n\n      if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\n        var contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\n        this.content = LoaderUtils.decodeText(contentArray);\n      } else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\n        var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n        this.body = data.slice(byteOffset, byteOffset + chunkLength);\n      } // Clients must ignore chunks with unknown types.\n\n\n      chunkIndex += chunkLength;\n    }\n\n    if (this.content === null) {\n      throw new Error('THREE.GLTFLoader: JSON content not found.');\n    }\n  }\n  /**\n   * DRACO Mesh Compression Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n   */\n\n\n  function GLTFDracoMeshCompressionExtension(json, dracoLoader) {\n    if (!dracoLoader) {\n      throw new Error('THREE.GLTFLoader: No DRACOLoader instance provided.');\n    }\n\n    this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n    this.json = json;\n    this.dracoLoader = dracoLoader;\n    this.dracoLoader.preload();\n  }\n\n  GLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function (primitive, parser) {\n    var json = this.json;\n    var dracoLoader = this.dracoLoader;\n    var bufferViewIndex = primitive.extensions[this.name].bufferView;\n    var gltfAttributeMap = primitive.extensions[this.name].attributes;\n    var threeAttributeMap = {};\n    var attributeNormalizedMap = {};\n    var attributeTypeMap = {};\n\n    for (var attributeName in gltfAttributeMap) {\n      var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n      threeAttributeMap[threeAttributeName] = gltfAttributeMap[attributeName];\n    }\n\n    for (attributeName in primitive.attributes) {\n      var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n      if (gltfAttributeMap[attributeName] !== undefined) {\n        var accessorDef = json.accessors[primitive.attributes[attributeName]];\n        var componentType = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n        attributeTypeMap[threeAttributeName] = componentType;\n        attributeNormalizedMap[threeAttributeName] = accessorDef.normalized === true;\n      }\n    }\n\n    return parser.getDependency('bufferView', bufferViewIndex).then(function (bufferView) {\n      return new Promise(function (resolve) {\n        dracoLoader.decodeDracoFile(bufferView, function (geometry) {\n          for (var attributeName in geometry.attributes) {\n            var attribute = geometry.attributes[attributeName];\n            var normalized = attributeNormalizedMap[attributeName];\n            if (normalized !== undefined) attribute.normalized = normalized;\n          }\n\n          resolve(geometry);\n        }, threeAttributeMap, attributeTypeMap);\n      });\n    });\n  };\n  /**\n   * Texture Transform Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n   */\n\n\n  function GLTFTextureTransformExtension() {\n    this.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n  }\n\n  GLTFTextureTransformExtension.prototype.extendTexture = function (texture, transform) {\n    texture = texture.clone();\n\n    if (transform.offset !== undefined) {\n      texture.offset.fromArray(transform.offset);\n    }\n\n    if (transform.rotation !== undefined) {\n      texture.rotation = transform.rotation;\n    }\n\n    if (transform.scale !== undefined) {\n      texture.repeat.fromArray(transform.scale);\n    }\n\n    if (transform.texCoord !== undefined) {\n      console.warn('THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.');\n    }\n\n    texture.needsUpdate = true;\n    return texture;\n  };\n  /**\n   * Specular-Glossiness Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n   */\n\n\n  function GLTFMaterialsPbrSpecularGlossinessExtension() {\n    return {\n      name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n      specularGlossinessParams: ['color', 'map', 'lightMap', 'lightMapIntensity', 'aoMap', 'aoMapIntensity', 'emissive', 'emissiveIntensity', 'emissiveMap', 'bumpMap', 'bumpScale', 'normalMap', 'displacementMap', 'displacementScale', 'displacementBias', 'specularMap', 'specular', 'glossinessMap', 'glossiness', 'alphaMap', 'envMap', 'envMapIntensity', 'refractionRatio'],\n      getMaterialType: function getMaterialType() {\n        return ShaderMaterial;\n      },\n      extendParams: function extendParams(materialParams, materialDef, parser) {\n        var pbrSpecularGlossiness = materialDef.extensions[this.name];\n        var shader = ShaderLib['standard'];\n        var uniforms = UniformsUtils.clone(shader.uniforms);\n        var specularMapParsFragmentChunk = ['#ifdef USE_SPECULARMAP', '\tuniform sampler2D specularMap;', '#endif'].join('\\n');\n        var glossinessMapParsFragmentChunk = ['#ifdef USE_GLOSSINESSMAP', '\tuniform sampler2D glossinessMap;', '#endif'].join('\\n');\n        var specularMapFragmentChunk = ['vec3 specularFactor = specular;', '#ifdef USE_SPECULARMAP', '\tvec4 texelSpecular = texture2D( specularMap, vUv );', '\ttexelSpecular = sRGBToLinear( texelSpecular );', '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture', '\tspecularFactor *= texelSpecular.rgb;', '#endif'].join('\\n');\n        var glossinessMapFragmentChunk = ['float glossinessFactor = glossiness;', '#ifdef USE_GLOSSINESSMAP', '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );', '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture', '\tglossinessFactor *= texelGlossiness.a;', '#endif'].join('\\n');\n        var lightPhysicalFragmentChunk = ['PhysicalMaterial material;', 'material.diffuseColor = diffuseColor.rgb;', 'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );', 'material.specularColor = specularFactor.rgb;'].join('\\n');\n        var fragmentShader = shader.fragmentShader.replace('uniform float roughness;', 'uniform vec3 specular;').replace('uniform float metalness;', 'uniform float glossiness;').replace('#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk).replace('#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk).replace('#include <roughnessmap_fragment>', specularMapFragmentChunk).replace('#include <metalnessmap_fragment>', glossinessMapFragmentChunk).replace('#include <lights_physical_fragment>', lightPhysicalFragmentChunk);\n        delete uniforms.roughness;\n        delete uniforms.metalness;\n        delete uniforms.roughnessMap;\n        delete uniforms.metalnessMap;\n        uniforms.specular = {\n          value: new Color().setHex(0x111111)\n        };\n        uniforms.glossiness = {\n          value: 0.5\n        };\n        uniforms.specularMap = {\n          value: null\n        };\n        uniforms.glossinessMap = {\n          value: null\n        };\n        materialParams.vertexShader = shader.vertexShader;\n        materialParams.fragmentShader = fragmentShader;\n        materialParams.uniforms = uniforms;\n        materialParams.defines = {\n          'STANDARD': ''\n        };\n        materialParams.color = new Color(1.0, 1.0, 1.0);\n        materialParams.opacity = 1.0;\n        var pending = [];\n\n        if (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\n          var array = pbrSpecularGlossiness.diffuseFactor;\n          materialParams.color.fromArray(array);\n          materialParams.opacity = array[3];\n        }\n\n        if (pbrSpecularGlossiness.diffuseTexture !== undefined) {\n          pending.push(parser.assignTexture(materialParams, 'map', pbrSpecularGlossiness.diffuseTexture));\n        }\n\n        materialParams.emissive = new Color(0.0, 0.0, 0.0);\n        materialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n        materialParams.specular = new Color(1.0, 1.0, 1.0);\n\n        if (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\n          materialParams.specular.fromArray(pbrSpecularGlossiness.specularFactor);\n        }\n\n        if (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\n          var specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n          pending.push(parser.assignTexture(materialParams, 'glossinessMap', specGlossMapDef));\n          pending.push(parser.assignTexture(materialParams, 'specularMap', specGlossMapDef));\n        }\n\n        return Promise.all(pending);\n      },\n      createMaterial: function createMaterial(params) {\n        // setup material properties based on MeshStandardMaterial for Specular-Glossiness\n        var material = new ShaderMaterial({\n          defines: params.defines,\n          vertexShader: params.vertexShader,\n          fragmentShader: params.fragmentShader,\n          uniforms: params.uniforms,\n          fog: true,\n          lights: true,\n          opacity: params.opacity,\n          transparent: params.transparent\n        });\n        material.isGLTFSpecularGlossinessMaterial = true;\n        material.color = params.color;\n        material.map = params.map === undefined ? null : params.map;\n        material.lightMap = null;\n        material.lightMapIntensity = 1.0;\n        material.aoMap = params.aoMap === undefined ? null : params.aoMap;\n        material.aoMapIntensity = 1.0;\n        material.emissive = params.emissive;\n        material.emissiveIntensity = 1.0;\n        material.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\n        material.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\n        material.bumpScale = 1;\n        material.normalMap = params.normalMap === undefined ? null : params.normalMap;\n        if (params.normalScale) material.normalScale = params.normalScale;\n        material.displacementMap = null;\n        material.displacementScale = 1;\n        material.displacementBias = 0;\n        material.specularMap = params.specularMap === undefined ? null : params.specularMap;\n        material.specular = params.specular;\n        material.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\n        material.glossiness = params.glossiness;\n        material.alphaMap = null;\n        material.envMap = params.envMap === undefined ? null : params.envMap;\n        material.envMapIntensity = 1.0;\n        material.refractionRatio = 0.98;\n        material.extensions.derivatives = true;\n        return material;\n      },\n\n      /**\n       * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\n       * copy only properties it knows about or inherits, and misses many properties that would\n       * normally be defined by MeshStandardMaterial.\n       *\n       * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\n       * loading a glTF model, but cloning later (e.g. by the user) would require these changes\n       * AND also updating `.onBeforeRender` on the parent mesh.\n       *\n       * @param  {ShaderMaterial} source\n       * @return {ShaderMaterial}\n       */\n      cloneMaterial: function cloneMaterial(source) {\n        var target = source.clone();\n        target.isGLTFSpecularGlossinessMaterial = true;\n        var params = this.specularGlossinessParams;\n\n        for (var i = 0, il = params.length; i < il; i++) {\n          var value = source[params[i]];\n          target[params[i]] = value && value.isColor ? value.clone() : value;\n        }\n\n        return target;\n      },\n      // Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\n      refreshUniforms: function refreshUniforms(renderer, scene, camera, geometry, material) {\n        if (material.isGLTFSpecularGlossinessMaterial !== true) {\n          return;\n        }\n\n        var uniforms = material.uniforms;\n        var defines = material.defines;\n        uniforms.opacity.value = material.opacity;\n        uniforms.diffuse.value.copy(material.color);\n        uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n        uniforms.map.value = material.map;\n        uniforms.specularMap.value = material.specularMap;\n        uniforms.alphaMap.value = material.alphaMap;\n        uniforms.lightMap.value = material.lightMap;\n        uniforms.lightMapIntensity.value = material.lightMapIntensity;\n        uniforms.aoMap.value = material.aoMap;\n        uniforms.aoMapIntensity.value = material.aoMapIntensity; // uv repeat and offset setting priorities\n        // 1. color map\n        // 2. specular map\n        // 3. normal map\n        // 4. bump map\n        // 5. alpha map\n        // 6. emissive map\n\n        var uvScaleMap;\n\n        if (material.map) {\n          uvScaleMap = material.map;\n        } else if (material.specularMap) {\n          uvScaleMap = material.specularMap;\n        } else if (material.displacementMap) {\n          uvScaleMap = material.displacementMap;\n        } else if (material.normalMap) {\n          uvScaleMap = material.normalMap;\n        } else if (material.bumpMap) {\n          uvScaleMap = material.bumpMap;\n        } else if (material.glossinessMap) {\n          uvScaleMap = material.glossinessMap;\n        } else if (material.alphaMap) {\n          uvScaleMap = material.alphaMap;\n        } else if (material.emissiveMap) {\n          uvScaleMap = material.emissiveMap;\n        }\n\n        if (uvScaleMap !== undefined) {\n          // backwards compatibility\n          if (uvScaleMap.isWebGLRenderTarget) {\n            uvScaleMap = uvScaleMap.texture;\n          }\n\n          if (uvScaleMap.matrixAutoUpdate === true) {\n            uvScaleMap.updateMatrix();\n          }\n\n          uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n        }\n\n        if (material.envMap) {\n          uniforms.envMap.value = material.envMap;\n          uniforms.envMapIntensity.value = material.envMapIntensity; // don't flip CubeTexture envMaps, flip everything else:\n          //  WebGLRenderTargetCube will be flipped for backwards compatibility\n          //  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n          // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\n          uniforms.flipEnvMap.value = material.envMap.isCubeTexture ? -1 : 1;\n          uniforms.reflectivity.value = material.reflectivity;\n          uniforms.refractionRatio.value = material.refractionRatio;\n          uniforms.maxMipLevel.value = renderer.properties.get(material.envMap).__maxMipLevel;\n        }\n\n        uniforms.specular.value.copy(material.specular);\n        uniforms.glossiness.value = material.glossiness;\n        uniforms.glossinessMap.value = material.glossinessMap;\n        uniforms.emissiveMap.value = material.emissiveMap;\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n\n        if (uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined) {\n          defines.USE_GLOSSINESSMAP = ''; // set USE_ROUGHNESSMAP to enable vUv\n\n          defines.USE_ROUGHNESSMAP = '';\n        }\n\n        if (uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined) {\n          delete defines.USE_GLOSSINESSMAP;\n          delete defines.USE_ROUGHNESSMAP;\n        }\n      }\n    };\n  }\n  /**\n   * Mesh Quantization Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n   */\n\n\n  function GLTFMeshQuantizationExtension() {\n    this.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n  }\n  /*********************************/\n\n  /********** INTERPOLATION ********/\n\n  /*********************************/\n  // Spline Interpolation\n  // Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\n\n  function GLTFCubicSplineInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  GLTFCubicSplineInterpolant.prototype = Object.create(Interpolant.prototype);\n  GLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n  GLTFCubicSplineInterpolant.prototype.copySampleValue_ = function (index) {\n    // Copies a sample value to the result buffer. See description of glTF\n    // CUBICSPLINE values layout in interpolate_() function below.\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        valueSize = this.valueSize,\n        offset = index * valueSize * 3 + valueSize;\n\n    for (var i = 0; i !== valueSize; i++) {\n      result[i] = values[offset + i];\n    }\n\n    return result;\n  };\n\n  GLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n  GLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n  GLTFCubicSplineInterpolant.prototype.interpolate_ = function (i1, t0, t, t1) {\n    var result = this.resultBuffer;\n    var values = this.sampleValues;\n    var stride = this.valueSize;\n    var stride2 = stride * 2;\n    var stride3 = stride * 3;\n    var td = t1 - t0;\n    var p = (t - t0) / td;\n    var pp = p * p;\n    var ppp = pp * p;\n    var offset1 = i1 * stride3;\n    var offset0 = offset1 - stride3;\n    var s2 = -2 * ppp + 3 * pp;\n    var s3 = ppp - pp;\n    var s0 = 1 - s2;\n    var s1 = s3 - pp + p; // Layout of keyframe output values for CUBICSPLINE animations:\n    //   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\n    for (var i = 0; i !== stride; i++) {\n      var p0 = values[offset0 + i + stride]; // splineVertex_k\n\n      var m0 = values[offset0 + i + stride2] * td; // outTangent_k * (t_k+1 - t_k)\n\n      var p1 = values[offset1 + i + stride]; // splineVertex_k+1\n\n      var m1 = values[offset1 + i] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n      result[i] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n    }\n\n    return result;\n  };\n  /*********************************/\n\n  /********** INTERNALS ************/\n\n  /*********************************/\n\n  /* CONSTANTS */\n\n\n  var WEBGL_CONSTANTS = {\n    FLOAT: 5126,\n    //FLOAT_MAT2: 35674,\n    FLOAT_MAT3: 35675,\n    FLOAT_MAT4: 35676,\n    FLOAT_VEC2: 35664,\n    FLOAT_VEC3: 35665,\n    FLOAT_VEC4: 35666,\n    LINEAR: 9729,\n    REPEAT: 10497,\n    SAMPLER_2D: 35678,\n    POINTS: 0,\n    LINES: 1,\n    LINE_LOOP: 2,\n    LINE_STRIP: 3,\n    TRIANGLES: 4,\n    TRIANGLE_STRIP: 5,\n    TRIANGLE_FAN: 6,\n    UNSIGNED_BYTE: 5121,\n    UNSIGNED_SHORT: 5123\n  };\n  var WEBGL_COMPONENT_TYPES = {\n    5120: Int8Array,\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array\n  };\n  var WEBGL_FILTERS = {\n    9728: NearestFilter,\n    9729: LinearFilter,\n    9984: NearestMipmapNearestFilter,\n    9985: LinearMipmapNearestFilter,\n    9986: NearestMipmapLinearFilter,\n    9987: LinearMipmapLinearFilter\n  };\n  var WEBGL_WRAPPINGS = {\n    33071: ClampToEdgeWrapping,\n    33648: MirroredRepeatWrapping,\n    10497: RepeatWrapping\n  };\n  var WEBGL_TYPE_SIZES = {\n    'SCALAR': 1,\n    'VEC2': 2,\n    'VEC3': 3,\n    'VEC4': 4,\n    'MAT2': 4,\n    'MAT3': 9,\n    'MAT4': 16\n  };\n  var ATTRIBUTES = {\n    POSITION: 'position',\n    NORMAL: 'normal',\n    TANGENT: 'tangent',\n    TEXCOORD_0: 'uv',\n    TEXCOORD_1: 'uv2',\n    COLOR_0: 'color',\n    WEIGHTS_0: 'skinWeight',\n    JOINTS_0: 'skinIndex'\n  };\n  var PATH_PROPERTIES = {\n    scale: 'scale',\n    translation: 'position',\n    rotation: 'quaternion',\n    weights: 'morphTargetInfluences'\n  };\n  var INTERPOLATION = {\n    CUBICSPLINE: undefined,\n    // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n    // keyframe track will be initialized with a default interpolation type, then modified.\n    LINEAR: InterpolateLinear,\n    STEP: InterpolateDiscrete\n  };\n  var ALPHA_MODES = {\n    OPAQUE: 'OPAQUE',\n    MASK: 'MASK',\n    BLEND: 'BLEND'\n  };\n  var MIME_TYPE_FORMATS = {\n    'image/png': RGBAFormat,\n    'image/jpeg': RGBFormat\n  };\n  /* UTILITY FUNCTIONS */\n\n  function resolveURL(url, path) {\n    // Invalid URL\n    if (typeof url !== 'string' || url === '') return ''; // Host Relative URL\n\n    if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n      path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n    } // Absolute URL http://,https://,//\n\n\n    if (/^(https?:)?\\/\\//i.test(url)) return url; // Data URI\n\n    if (/^data:.*,.*$/i.test(url)) return url; // Blob URL\n\n    if (/^blob:.*$/i.test(url)) return url; // Relative URL\n\n    return path + url;\n  }\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n   */\n\n\n  function createDefaultMaterial(cache) {\n    if (cache['DefaultMaterial'] === undefined) {\n      cache['DefaultMaterial'] = new MeshStandardMaterial({\n        color: 0xFFFFFF,\n        emissive: 0x000000,\n        metalness: 1,\n        roughness: 1,\n        transparent: false,\n        depthTest: true,\n        side: FrontSide\n      });\n    }\n\n    return cache['DefaultMaterial'];\n  }\n\n  function addUnknownExtensionsToUserData(knownExtensions, object, objectDef) {\n    // Add unknown glTF extensions to an object's userData.\n    for (var name in objectDef.extensions) {\n      if (knownExtensions[name] === undefined) {\n        object.userData.gltfExtensions = object.userData.gltfExtensions || {};\n        object.userData.gltfExtensions[name] = objectDef.extensions[name];\n      }\n    }\n  }\n  /**\n   * @param {Object3D|Material|BufferGeometry} object\n   * @param {GLTF.definition} gltfDef\n   */\n\n\n  function assignExtrasToUserData(object, gltfDef) {\n    if (gltfDef.extras !== undefined) {\n      if (typeof gltfDef.extras === 'object') {\n        Object.assign(object.userData, gltfDef.extras);\n      } else {\n        console.warn('THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras);\n      }\n    }\n  }\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n   *\n   * @param {BufferGeometry} geometry\n   * @param {Array<GLTF.Target>} targets\n   * @param {GLTFParser} parser\n   * @return {Promise<BufferGeometry>}\n   */\n\n\n  function addMorphTargets(geometry, targets, parser) {\n    var hasMorphPosition = false;\n    var hasMorphNormal = false;\n\n    for (var i = 0, il = targets.length; i < il; i++) {\n      var target = targets[i];\n      if (target.POSITION !== undefined) hasMorphPosition = true;\n      if (target.NORMAL !== undefined) hasMorphNormal = true;\n      if (hasMorphPosition && hasMorphNormal) break;\n    }\n\n    if (!hasMorphPosition && !hasMorphNormal) return Promise.resolve(geometry);\n    var pendingPositionAccessors = [];\n    var pendingNormalAccessors = [];\n\n    for (var i = 0, il = targets.length; i < il; i++) {\n      var target = targets[i];\n\n      if (hasMorphPosition) {\n        var pendingAccessor = target.POSITION !== undefined ? parser.getDependency('accessor', target.POSITION) : geometry.attributes.position;\n        pendingPositionAccessors.push(pendingAccessor);\n      }\n\n      if (hasMorphNormal) {\n        var pendingAccessor = target.NORMAL !== undefined ? parser.getDependency('accessor', target.NORMAL) : geometry.attributes.normal;\n        pendingNormalAccessors.push(pendingAccessor);\n      }\n    }\n\n    return Promise.all([Promise.all(pendingPositionAccessors), Promise.all(pendingNormalAccessors)]).then(function (accessors) {\n      var morphPositions = accessors[0];\n      var morphNormals = accessors[1];\n      if (hasMorphPosition) geometry.morphAttributes.position = morphPositions;\n      if (hasMorphNormal) geometry.morphAttributes.normal = morphNormals;\n      geometry.morphTargetsRelative = true;\n      return geometry;\n    });\n  }\n  /**\n   * @param {Mesh} mesh\n   * @param {GLTF.Mesh} meshDef\n   */\n\n\n  function updateMorphTargets(mesh, meshDef) {\n    mesh.updateMorphTargets();\n\n    if (meshDef.weights !== undefined) {\n      for (var i = 0, il = meshDef.weights.length; i < il; i++) {\n        mesh.morphTargetInfluences[i] = meshDef.weights[i];\n      }\n    } // .extras has user-defined data, so check that .extras.targetNames is an array.\n\n\n    if (meshDef.extras && Array.isArray(meshDef.extras.targetNames)) {\n      var targetNames = meshDef.extras.targetNames;\n\n      if (mesh.morphTargetInfluences.length === targetNames.length) {\n        mesh.morphTargetDictionary = {};\n\n        for (var i = 0, il = targetNames.length; i < il; i++) {\n          mesh.morphTargetDictionary[targetNames[i]] = i;\n        }\n      } else {\n        console.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.');\n      }\n    }\n  }\n\n  function createPrimitiveKey(primitiveDef) {\n    var dracoExtension = primitiveDef.extensions && primitiveDef.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION];\n    var geometryKey;\n\n    if (dracoExtension) {\n      geometryKey = 'draco:' + dracoExtension.bufferView + ':' + dracoExtension.indices + ':' + createAttributesKey(dracoExtension.attributes);\n    } else {\n      geometryKey = primitiveDef.indices + ':' + createAttributesKey(primitiveDef.attributes) + ':' + primitiveDef.mode;\n    }\n\n    return geometryKey;\n  }\n\n  function createAttributesKey(attributes) {\n    var attributesKey = '';\n    var keys = Object.keys(attributes).sort();\n\n    for (var i = 0, il = keys.length; i < il; i++) {\n      attributesKey += keys[i] + ':' + attributes[keys[i]] + ';';\n    }\n\n    return attributesKey;\n  }\n  /* GLTF PARSER */\n\n\n  function GLTFParser(json, extensions, options) {\n    this.json = json || {};\n    this.extensions = extensions || {};\n    this.options = options || {}; // loader object cache\n\n    this.cache = new GLTFRegistry(); // BufferGeometry caching\n\n    this.primitiveCache = {};\n    this.textureLoader = new TextureLoader(this.options.manager);\n    this.textureLoader.setCrossOrigin(this.options.crossOrigin);\n    this.fileLoader = new FileLoader(this.options.manager);\n    this.fileLoader.setResponseType('arraybuffer');\n\n    if (this.options.crossOrigin === 'use-credentials') {\n      this.fileLoader.setWithCredentials(true);\n    }\n  }\n\n  GLTFParser.prototype.parse = function (onLoad, onError) {\n    var parser = this;\n    var json = this.json;\n    var extensions = this.extensions; // Clear the loader cache\n\n    this.cache.removeAll(); // Mark the special nodes/meshes in json for efficient parse\n\n    this.markDefs();\n    Promise.all([this.getDependencies('scene'), this.getDependencies('animation'), this.getDependencies('camera')]).then(function (dependencies) {\n      var result = {\n        scene: dependencies[0][json.scene || 0],\n        scenes: dependencies[0],\n        animations: dependencies[1],\n        cameras: dependencies[2],\n        asset: json.asset,\n        parser: parser,\n        userData: {}\n      };\n      addUnknownExtensionsToUserData(extensions, result, json);\n      assignExtrasToUserData(result, json);\n      onLoad(result);\n    })[\"catch\"](onError);\n  };\n  /**\n   * Marks the special nodes/meshes in json for efficient parse.\n   */\n\n\n  GLTFParser.prototype.markDefs = function () {\n    var nodeDefs = this.json.nodes || [];\n    var skinDefs = this.json.skins || [];\n    var meshDefs = this.json.meshes || [];\n    var meshReferences = {};\n    var meshUses = {}; // Nothing in the node definition indicates whether it is a Bone or an\n    // Object3D. Use the skins' joint references to mark bones.\n\n    for (var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex++) {\n      var joints = skinDefs[skinIndex].joints;\n\n      for (var i = 0, il = joints.length; i < il; i++) {\n        nodeDefs[joints[i]].isBone = true;\n      }\n    } // Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n    // avoid having more than one Mesh with the same name, count\n    // references and rename instances below.\n    //\n    // Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\n\n    for (var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\n      var nodeDef = nodeDefs[nodeIndex];\n\n      if (nodeDef.mesh !== undefined) {\n        if (meshReferences[nodeDef.mesh] === undefined) {\n          meshReferences[nodeDef.mesh] = meshUses[nodeDef.mesh] = 0;\n        }\n\n        meshReferences[nodeDef.mesh]++; // Nothing in the mesh definition indicates whether it is\n        // a SkinnedMesh or Mesh. Use the node's mesh reference\n        // to mark SkinnedMesh if node has skin.\n\n        if (nodeDef.skin !== undefined) {\n          meshDefs[nodeDef.mesh].isSkinnedMesh = true;\n        }\n      }\n    }\n\n    this.json.meshReferences = meshReferences;\n    this.json.meshUses = meshUses;\n  };\n  /**\n   * Requests the specified dependency asynchronously, with caching.\n   * @param {string} type\n   * @param {number} index\n   * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n   */\n\n\n  GLTFParser.prototype.getDependency = function (type, index) {\n    var cacheKey = type + ':' + index;\n    var dependency = this.cache.get(cacheKey);\n\n    if (!dependency) {\n      switch (type) {\n        case 'scene':\n          dependency = this.loadScene(index);\n          break;\n\n        case 'node':\n          dependency = this.loadNode(index);\n          break;\n\n        case 'mesh':\n          dependency = this.loadMesh(index);\n          break;\n\n        case 'accessor':\n          dependency = this.loadAccessor(index);\n          break;\n\n        case 'bufferView':\n          dependency = this.loadBufferView(index);\n          break;\n\n        case 'buffer':\n          dependency = this.loadBuffer(index);\n          break;\n\n        case 'material':\n          dependency = this.loadMaterial(index);\n          break;\n\n        case 'texture':\n          dependency = this.loadTexture(index);\n          break;\n\n        case 'skin':\n          dependency = this.loadSkin(index);\n          break;\n\n        case 'animation':\n          dependency = this.loadAnimation(index);\n          break;\n\n        case 'camera':\n          dependency = this.loadCamera(index);\n          break;\n\n        case 'light':\n          dependency = this.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].loadLight(index);\n          break;\n\n        default:\n          throw new Error('Unknown type: ' + type);\n      }\n\n      this.cache.add(cacheKey, dependency);\n    }\n\n    return dependency;\n  };\n  /**\n   * Requests all dependencies of the specified type asynchronously, with caching.\n   * @param {string} type\n   * @return {Promise<Array<Object>>}\n   */\n\n\n  GLTFParser.prototype.getDependencies = function (type) {\n    var dependencies = this.cache.get(type);\n\n    if (!dependencies) {\n      var parser = this;\n      var defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || [];\n      dependencies = Promise.all(defs.map(function (def, index) {\n        return parser.getDependency(type, index);\n      }));\n      this.cache.add(type, dependencies);\n    }\n\n    return dependencies;\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n   * @param {number} bufferIndex\n   * @return {Promise<ArrayBuffer>}\n   */\n\n\n  GLTFParser.prototype.loadBuffer = function (bufferIndex) {\n    var bufferDef = this.json.buffers[bufferIndex];\n    var loader = this.fileLoader;\n\n    if (bufferDef.type && bufferDef.type !== 'arraybuffer') {\n      throw new Error('THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.');\n    } // If present, GLB container is required to be the first buffer.\n\n\n    if (bufferDef.uri === undefined && bufferIndex === 0) {\n      return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);\n    }\n\n    var options = this.options;\n    return new Promise(function (resolve, reject) {\n      loader.load(resolveURL(bufferDef.uri, options.path), resolve, undefined, function () {\n        reject(new Error('THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".'));\n      });\n    });\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n   * @param {number} bufferViewIndex\n   * @return {Promise<ArrayBuffer>}\n   */\n\n\n  GLTFParser.prototype.loadBufferView = function (bufferViewIndex) {\n    var bufferViewDef = this.json.bufferViews[bufferViewIndex];\n    return this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\n      var byteLength = bufferViewDef.byteLength || 0;\n      var byteOffset = bufferViewDef.byteOffset || 0;\n      return buffer.slice(byteOffset, byteOffset + byteLength);\n    });\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n   * @param {number} accessorIndex\n   * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n   */\n\n\n  GLTFParser.prototype.loadAccessor = function (accessorIndex) {\n    var parser = this;\n    var json = this.json;\n    var accessorDef = this.json.accessors[accessorIndex];\n\n    if (accessorDef.bufferView === undefined && accessorDef.sparse === undefined) {\n      // Ignore empty accessors, which may be used to declare runtime\n      // information about attributes coming from another source (e.g. Draco\n      // compression extension).\n      return Promise.resolve(null);\n    }\n\n    var pendingBufferViews = [];\n\n    if (accessorDef.bufferView !== undefined) {\n      pendingBufferViews.push(this.getDependency('bufferView', accessorDef.bufferView));\n    } else {\n      pendingBufferViews.push(null);\n    }\n\n    if (accessorDef.sparse !== undefined) {\n      pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.indices.bufferView));\n      pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.values.bufferView));\n    }\n\n    return Promise.all(pendingBufferViews).then(function (bufferViews) {\n      var bufferView = bufferViews[0];\n      var itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\n      var TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType]; // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\n      var elementBytes = TypedArray.BYTES_PER_ELEMENT;\n      var itemBytes = elementBytes * itemSize;\n      var byteOffset = accessorDef.byteOffset || 0;\n      var byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[accessorDef.bufferView].byteStride : undefined;\n      var normalized = accessorDef.normalized === true;\n      var array, bufferAttribute; // The buffer is not interleaved if the stride is the item size in bytes.\n\n      if (byteStride && byteStride !== itemBytes) {\n        // Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n        // This makes sure that IBA.count reflects accessor.count properly\n        var ibSlice = Math.floor(byteOffset / byteStride);\n        var ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n        var ib = parser.cache.get(ibCacheKey);\n\n        if (!ib) {\n          array = new TypedArray(bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes); // Integer parameters to IB/IBA are in array elements, not bytes.\n\n          ib = new InterleavedBuffer(array, byteStride / elementBytes);\n          parser.cache.add(ibCacheKey, ib);\n        }\n\n        bufferAttribute = new InterleavedBufferAttribute(ib, itemSize, byteOffset % byteStride / elementBytes, normalized);\n      } else {\n        if (bufferView === null) {\n          array = new TypedArray(accessorDef.count * itemSize);\n        } else {\n          array = new TypedArray(bufferView, byteOffset, accessorDef.count * itemSize);\n        }\n\n        bufferAttribute = new BufferAttribute(array, itemSize, normalized);\n      } // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\n\n      if (accessorDef.sparse !== undefined) {\n        var itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n        var TypedArrayIndices = WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];\n        var byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n        var byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n        var sparseIndices = new TypedArrayIndices(bufferViews[1], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices);\n        var sparseValues = new TypedArray(bufferViews[2], byteOffsetValues, accessorDef.sparse.count * itemSize);\n\n        if (bufferView !== null) {\n          // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n          bufferAttribute = new BufferAttribute(bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized);\n        }\n\n        for (var i = 0, il = sparseIndices.length; i < il; i++) {\n          var index = sparseIndices[i];\n          bufferAttribute.setX(index, sparseValues[i * itemSize]);\n          if (itemSize >= 2) bufferAttribute.setY(index, sparseValues[i * itemSize + 1]);\n          if (itemSize >= 3) bufferAttribute.setZ(index, sparseValues[i * itemSize + 2]);\n          if (itemSize >= 4) bufferAttribute.setW(index, sparseValues[i * itemSize + 3]);\n          if (itemSize >= 5) throw new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');\n        }\n      }\n\n      return bufferAttribute;\n    });\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n   * @param {number} textureIndex\n   * @return {Promise<THREE.Texture>}\n   */\n\n\n  GLTFParser.prototype.loadTexture = function (textureIndex) {\n    var parser = this;\n    var json = this.json;\n    var options = this.options;\n    var textureLoader = this.textureLoader;\n    var URL = window.URL || window.webkitURL;\n    var textureDef = json.textures[textureIndex];\n    var textureExtensions = textureDef.extensions || {};\n    var source;\n\n    if (textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]) {\n      source = json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source];\n    } else {\n      source = json.images[textureDef.source];\n    }\n\n    var sourceURI = source.uri;\n    var isObjectURL = false;\n\n    if (source.bufferView !== undefined) {\n      // Load binary image data from bufferView, if provided.\n      sourceURI = parser.getDependency('bufferView', source.bufferView).then(function (bufferView) {\n        isObjectURL = true;\n        var blob = new Blob([bufferView], {\n          type: source.mimeType\n        });\n        sourceURI = URL.createObjectURL(blob);\n        return sourceURI;\n      });\n    }\n\n    return Promise.resolve(sourceURI).then(function (sourceURI) {\n      // Load Texture resource.\n      var loader = options.manager.getHandler(sourceURI);\n\n      if (!loader) {\n        loader = textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS] ? parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader : textureLoader;\n      }\n\n      return new Promise(function (resolve, reject) {\n        loader.load(resolveURL(sourceURI, options.path), resolve, undefined, reject);\n      });\n    }).then(function (texture) {\n      // Clean up resources and configure Texture.\n      if (isObjectURL === true) {\n        URL.revokeObjectURL(sourceURI);\n      }\n\n      texture.flipY = false;\n      if (textureDef.name !== undefined) texture.name = textureDef.name; // Ignore unknown mime types, like DDS files.\n\n      if (source.mimeType in MIME_TYPE_FORMATS) {\n        texture.format = MIME_TYPE_FORMATS[source.mimeType];\n      }\n\n      var samplers = json.samplers || {};\n      var sampler = samplers[textureDef.sampler] || {};\n      texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || LinearFilter;\n      texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || LinearMipmapLinearFilter;\n      texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || RepeatWrapping;\n      texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || RepeatWrapping;\n      return texture;\n    });\n  };\n  /**\n   * Asynchronously assigns a texture to the given material parameters.\n   * @param {Object} materialParams\n   * @param {string} mapName\n   * @param {Object} mapDef\n   * @return {Promise}\n   */\n\n\n  GLTFParser.prototype.assignTexture = function (materialParams, mapName, mapDef) {\n    var parser = this;\n    return this.getDependency('texture', mapDef.index).then(function (texture) {\n      if (!texture.isCompressedTexture) {\n        switch (mapName) {\n          case 'aoMap':\n          case 'emissiveMap':\n          case 'metalnessMap':\n          case 'normalMap':\n          case 'roughnessMap':\n            texture.format = RGBFormat;\n            break;\n        }\n      } // Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n      // However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\n\n      if (mapDef.texCoord !== undefined && mapDef.texCoord != 0 && !(mapName === 'aoMap' && mapDef.texCoord == 1)) {\n        console.warn('THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.');\n      }\n\n      if (parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]) {\n        var transform = mapDef.extensions !== undefined ? mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM] : undefined;\n\n        if (transform) {\n          texture = parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(texture, transform);\n        }\n      }\n\n      materialParams[mapName] = texture;\n    });\n  };\n  /**\n   * Assigns final material to a Mesh, Line, or Points instance. The instance\n   * already has a material (generated from the glTF material options alone)\n   * but reuse of the same glTF material may require multiple threejs materials\n   * to accomodate different primitive types, defines, etc. New materials will\n   * be created if necessary, and reused from a cache.\n   * @param  {Object3D} mesh Mesh, Line, or Points instance.\n   */\n\n\n  GLTFParser.prototype.assignFinalMaterial = function (mesh) {\n    var geometry = mesh.geometry;\n    var material = mesh.material;\n    var extensions = this.extensions;\n    var useVertexTangents = geometry.attributes.tangent !== undefined;\n    var useVertexColors = geometry.attributes.color !== undefined;\n    var useFlatShading = geometry.attributes.normal === undefined;\n    var useSkinning = mesh.isSkinnedMesh === true;\n    var useMorphTargets = Object.keys(geometry.morphAttributes).length > 0;\n    var useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n    if (mesh.isPoints) {\n      var cacheKey = 'PointsMaterial:' + material.uuid;\n      var pointsMaterial = this.cache.get(cacheKey);\n\n      if (!pointsMaterial) {\n        pointsMaterial = new PointsMaterial();\n        Material.prototype.copy.call(pointsMaterial, material);\n        pointsMaterial.color.copy(material.color);\n        pointsMaterial.map = material.map;\n        pointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n        this.cache.add(cacheKey, pointsMaterial);\n      }\n\n      material = pointsMaterial;\n    } else if (mesh.isLine) {\n      var cacheKey = 'LineBasicMaterial:' + material.uuid;\n      var lineMaterial = this.cache.get(cacheKey);\n\n      if (!lineMaterial) {\n        lineMaterial = new LineBasicMaterial();\n        Material.prototype.copy.call(lineMaterial, material);\n        lineMaterial.color.copy(material.color);\n        this.cache.add(cacheKey, lineMaterial);\n      }\n\n      material = lineMaterial;\n    } // Clone the material if it will be modified\n\n\n    if (useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets) {\n      var cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n      if (material.isGLTFSpecularGlossinessMaterial) cacheKey += 'specular-glossiness:';\n      if (useSkinning) cacheKey += 'skinning:';\n      if (useVertexTangents) cacheKey += 'vertex-tangents:';\n      if (useVertexColors) cacheKey += 'vertex-colors:';\n      if (useFlatShading) cacheKey += 'flat-shading:';\n      if (useMorphTargets) cacheKey += 'morph-targets:';\n      if (useMorphNormals) cacheKey += 'morph-normals:';\n      var cachedMaterial = this.cache.get(cacheKey);\n\n      if (!cachedMaterial) {\n        cachedMaterial = material.isGLTFSpecularGlossinessMaterial ? extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].cloneMaterial(material) : material.clone();\n        if (useSkinning) cachedMaterial.skinning = true;\n        if (useVertexTangents) cachedMaterial.vertexTangents = true;\n        if (useVertexColors) cachedMaterial.vertexColors = VertexColors;\n        if (useFlatShading) cachedMaterial.flatShading = true;\n        if (useMorphTargets) cachedMaterial.morphTargets = true;\n        if (useMorphNormals) cachedMaterial.morphNormals = true;\n        this.cache.add(cacheKey, cachedMaterial);\n      }\n\n      material = cachedMaterial;\n    } // workarounds for mesh and geometry\n\n\n    if (material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined) {\n      geometry.setAttribute('uv2', new BufferAttribute(geometry.attributes.uv.array, 2));\n    }\n\n    if (material.isGLTFSpecularGlossinessMaterial) {\n      // for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\n      mesh.onBeforeRender = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms;\n    } // https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\n\n    if (material.normalScale && !useVertexTangents) {\n      material.normalScale.y = -material.normalScale.y;\n    }\n\n    mesh.material = material;\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n   * @param {number} materialIndex\n   * @return {Promise<Material>}\n   */\n\n\n  GLTFParser.prototype.loadMaterial = function (materialIndex) {\n    var parser = this;\n    var json = this.json;\n    var extensions = this.extensions;\n    var materialDef = json.materials[materialIndex];\n    var materialType;\n    var materialParams = {};\n    var materialExtensions = materialDef.extensions || {};\n    var pending = [];\n\n    if (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n      var sgExtension = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\n      materialType = sgExtension.getMaterialType();\n      pending.push(sgExtension.extendParams(materialParams, materialDef, parser));\n    } else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]) {\n      var kmuExtension = extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];\n      materialType = kmuExtension.getMaterialType();\n      pending.push(kmuExtension.extendParams(materialParams, materialDef, parser));\n    } else {\n      // Specification:\n      // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n      materialType = MeshStandardMaterial;\n      var metallicRoughness = materialDef.pbrMetallicRoughness || {};\n      materialParams.color = new Color(1.0, 1.0, 1.0);\n      materialParams.opacity = 1.0;\n\n      if (Array.isArray(metallicRoughness.baseColorFactor)) {\n        var array = metallicRoughness.baseColorFactor;\n        materialParams.color.fromArray(array);\n        materialParams.opacity = array[3];\n      }\n\n      if (metallicRoughness.baseColorTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n      }\n\n      materialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n      materialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n      if (metallicRoughness.metallicRoughnessTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture));\n        pending.push(parser.assignTexture(materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture));\n      }\n    }\n\n    if (materialDef.doubleSided === true) {\n      materialParams.side = DoubleSide;\n    }\n\n    var alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n    if (alphaMode === ALPHA_MODES.BLEND) {\n      materialParams.transparent = true;\n    } else {\n      materialParams.transparent = false;\n\n      if (alphaMode === ALPHA_MODES.MASK) {\n        materialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n      }\n    }\n\n    if (materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'normalMap', materialDef.normalTexture));\n      materialParams.normalScale = new Vector2(1, 1);\n\n      if (materialDef.normalTexture.scale !== undefined) {\n        materialParams.normalScale.set(materialDef.normalTexture.scale, materialDef.normalTexture.scale);\n      }\n    }\n\n    if (materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'aoMap', materialDef.occlusionTexture));\n\n      if (materialDef.occlusionTexture.strength !== undefined) {\n        materialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n      }\n    }\n\n    if (materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial) {\n      materialParams.emissive = new Color().fromArray(materialDef.emissiveFactor);\n    }\n\n    if (materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'emissiveMap', materialDef.emissiveTexture));\n    }\n\n    return Promise.all(pending).then(function () {\n      var material;\n\n      if (materialType === ShaderMaterial) {\n        material = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);\n      } else {\n        material = new materialType(materialParams);\n      }\n\n      if (materialDef.name !== undefined) material.name = materialDef.name; // baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\n      if (material.map) material.map.encoding = sRGBEncoding;\n      if (material.emissiveMap) material.emissiveMap.encoding = sRGBEncoding;\n      if (material.specularMap) material.specularMap.encoding = sRGBEncoding;\n      assignExtrasToUserData(material, materialDef);\n      if (materialDef.extensions) addUnknownExtensionsToUserData(extensions, material, materialDef);\n      return material;\n    });\n  };\n  /**\n   * @param {BufferGeometry} geometry\n   * @param {GLTF.Primitive} primitiveDef\n   * @param {GLTFParser} parser\n   */\n\n\n  function computeBounds(geometry, primitiveDef, parser) {\n    var attributes = primitiveDef.attributes;\n    var box = new Box3();\n\n    if (attributes.POSITION !== undefined) {\n      var accessor = parser.json.accessors[attributes.POSITION];\n      var min = accessor.min;\n      var max = accessor.max; // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n      if (min !== undefined && max !== undefined) {\n        box.set(new Vector3(min[0], min[1], min[2]), new Vector3(max[0], max[1], max[2]));\n      } else {\n        console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n        return;\n      }\n    } else {\n      return;\n    }\n\n    var targets = primitiveDef.targets;\n\n    if (targets !== undefined) {\n      var vector = new Vector3();\n\n      for (var i = 0, il = targets.length; i < il; i++) {\n        var target = targets[i];\n\n        if (target.POSITION !== undefined) {\n          var accessor = parser.json.accessors[target.POSITION];\n          var min = accessor.min;\n          var max = accessor.max; // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n          if (min !== undefined && max !== undefined) {\n            // we need to get max of absolute components because target weight is [-1,1]\n            vector.setX(Math.max(Math.abs(min[0]), Math.abs(max[0])));\n            vector.setY(Math.max(Math.abs(min[1]), Math.abs(max[1])));\n            vector.setZ(Math.max(Math.abs(min[2]), Math.abs(max[2])));\n            box.expandByVector(vector);\n          } else {\n            console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n          }\n        }\n      }\n    }\n\n    geometry.boundingBox = box;\n    var sphere = new Sphere();\n    box.getCenter(sphere.center);\n    sphere.radius = box.min.distanceTo(box.max) / 2;\n    geometry.boundingSphere = sphere;\n  }\n  /**\n   * @param {BufferGeometry} geometry\n   * @param {GLTF.Primitive} primitiveDef\n   * @param {GLTFParser} parser\n   * @return {Promise<BufferGeometry>}\n   */\n\n\n  function addPrimitiveAttributes(geometry, primitiveDef, parser) {\n    var attributes = primitiveDef.attributes;\n    var pending = [];\n\n    function assignAttributeAccessor(accessorIndex, attributeName) {\n      return parser.getDependency('accessor', accessorIndex).then(function (accessor) {\n        geometry.setAttribute(attributeName, accessor);\n      });\n    }\n\n    for (var gltfAttributeName in attributes) {\n      var threeAttributeName = ATTRIBUTES[gltfAttributeName] || gltfAttributeName.toLowerCase(); // Skip attributes already provided by e.g. Draco extension.\n\n      if (threeAttributeName in geometry.attributes) continue;\n      pending.push(assignAttributeAccessor(attributes[gltfAttributeName], threeAttributeName));\n    }\n\n    if (primitiveDef.indices !== undefined && !geometry.index) {\n      var accessor = parser.getDependency('accessor', primitiveDef.indices).then(function (accessor) {\n        geometry.setIndex(accessor);\n      });\n      pending.push(accessor);\n    }\n\n    assignExtrasToUserData(geometry, primitiveDef);\n    computeBounds(geometry, primitiveDef, parser);\n    return Promise.all(pending).then(function () {\n      return primitiveDef.targets !== undefined ? addMorphTargets(geometry, primitiveDef.targets, parser) : geometry;\n    });\n  }\n  /**\n   * @param {BufferGeometry} geometry\n   * @param {Number} drawMode\n   * @return {BufferGeometry}\n   */\n\n\n  function toTrianglesDrawMode(geometry, drawMode) {\n    var index = geometry.getIndex(); // generate index if not present\n\n    if (index === null) {\n      var indices = [];\n      var position = geometry.getAttribute('position');\n\n      if (position !== undefined) {\n        for (var i = 0; i < position.count; i++) {\n          indices.push(i);\n        }\n\n        geometry.setIndex(indices);\n        index = geometry.getIndex();\n      } else {\n        console.error('THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.');\n        return geometry;\n      }\n    } //\n\n\n    var numberOfTriangles = index.count - 2;\n    var newIndices = [];\n\n    if (drawMode === TriangleFanDrawMode) {\n      // gl.TRIANGLE_FAN\n      for (var i = 1; i <= numberOfTriangles; i++) {\n        newIndices.push(index.getX(0));\n        newIndices.push(index.getX(i));\n        newIndices.push(index.getX(i + 1));\n      }\n    } else {\n      // gl.TRIANGLE_STRIP\n      for (var i = 0; i < numberOfTriangles; i++) {\n        if (i % 2 === 0) {\n          newIndices.push(index.getX(i));\n          newIndices.push(index.getX(i + 1));\n          newIndices.push(index.getX(i + 2));\n        } else {\n          newIndices.push(index.getX(i + 2));\n          newIndices.push(index.getX(i + 1));\n          newIndices.push(index.getX(i));\n        }\n      }\n    }\n\n    if (newIndices.length / 3 !== numberOfTriangles) {\n      console.error('THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.');\n    } // build final geometry\n\n\n    var newGeometry = geometry.clone();\n    newGeometry.setIndex(newIndices);\n    return newGeometry;\n  }\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n   *\n   * Creates BufferGeometries from primitives.\n   *\n   * @param {Array<GLTF.Primitive>} primitives\n   * @return {Promise<Array<BufferGeometry>>}\n   */\n\n\n  GLTFParser.prototype.loadGeometries = function (primitives) {\n    var parser = this;\n    var extensions = this.extensions;\n    var cache = this.primitiveCache;\n\n    function createDracoPrimitive(primitive) {\n      return extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(primitive, parser).then(function (geometry) {\n        return addPrimitiveAttributes(geometry, primitive, parser);\n      });\n    }\n\n    var pending = [];\n\n    for (var i = 0, il = primitives.length; i < il; i++) {\n      var primitive = primitives[i];\n      var cacheKey = createPrimitiveKey(primitive); // See if we've already created this geometry\n\n      var cached = cache[cacheKey];\n\n      if (cached) {\n        // Use the cached geometry if it exists\n        pending.push(cached.promise);\n      } else {\n        var geometryPromise;\n\n        if (primitive.extensions && primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]) {\n          // Use DRACO geometry if available\n          geometryPromise = createDracoPrimitive(primitive);\n        } else {\n          // Otherwise create a new geometry\n          geometryPromise = addPrimitiveAttributes(new BufferGeometry(), primitive, parser);\n        } // Cache this geometry\n\n\n        cache[cacheKey] = {\n          primitive: primitive,\n          promise: geometryPromise\n        };\n        pending.push(geometryPromise);\n      }\n    }\n\n    return Promise.all(pending);\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n   * @param {number} meshIndex\n   * @return {Promise<Group|Mesh|SkinnedMesh>}\n   */\n\n\n  GLTFParser.prototype.loadMesh = function (meshIndex) {\n    var parser = this;\n    var json = this.json;\n    var meshDef = json.meshes[meshIndex];\n    var primitives = meshDef.primitives;\n    var pending = [];\n\n    for (var i = 0, il = primitives.length; i < il; i++) {\n      var material = primitives[i].material === undefined ? createDefaultMaterial(this.cache) : this.getDependency('material', primitives[i].material);\n      pending.push(material);\n    }\n\n    pending.push(parser.loadGeometries(primitives));\n    return Promise.all(pending).then(function (results) {\n      var materials = results.slice(0, results.length - 1);\n      var geometries = results[results.length - 1];\n      var meshes = [];\n\n      for (var i = 0, il = geometries.length; i < il; i++) {\n        var geometry = geometries[i];\n        var primitive = primitives[i]; // 1. create Mesh\n\n        var mesh;\n        var material = materials[i];\n\n        if (primitive.mode === WEBGL_CONSTANTS.TRIANGLES || primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP || primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN || primitive.mode === undefined) {\n          // .isSkinnedMesh isn't in glTF spec. See .markDefs()\n          mesh = meshDef.isSkinnedMesh === true ? new SkinnedMesh(geometry, material) : new Mesh(geometry, material);\n\n          if (mesh.isSkinnedMesh === true && !mesh.geometry.attributes.skinWeight.normalized) {\n            // we normalize floating point skin weight array to fix malformed assets (see #15319)\n            // it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n            mesh.normalizeSkinWeights();\n          }\n\n          if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\n            mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleStripDrawMode);\n          } else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\n            mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleFanDrawMode);\n          }\n        } else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\n          mesh = new LineSegments(geometry, material);\n        } else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\n          mesh = new Line(geometry, material);\n        } else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\n          mesh = new LineLoop(geometry, material);\n        } else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\n          mesh = new Points(geometry, material);\n        } else {\n          throw new Error('THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode);\n        }\n\n        if (Object.keys(mesh.geometry.morphAttributes).length > 0) {\n          updateMorphTargets(mesh, meshDef);\n        }\n\n        mesh.name = meshDef.name || 'mesh_' + meshIndex;\n        if (geometries.length > 1) mesh.name += '_' + i;\n        assignExtrasToUserData(mesh, meshDef);\n        parser.assignFinalMaterial(mesh);\n        meshes.push(mesh);\n      }\n\n      if (meshes.length === 1) {\n        return meshes[0];\n      }\n\n      var group = new Group();\n\n      for (var i = 0, il = meshes.length; i < il; i++) {\n        group.add(meshes[i]);\n      }\n\n      return group;\n    });\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n   * @param {number} cameraIndex\n   * @return {Promise<THREE.Camera>}\n   */\n\n\n  GLTFParser.prototype.loadCamera = function (cameraIndex) {\n    var camera;\n    var cameraDef = this.json.cameras[cameraIndex];\n    var params = cameraDef[cameraDef.type];\n\n    if (!params) {\n      console.warn('THREE.GLTFLoader: Missing camera parameters.');\n      return;\n    }\n\n    if (cameraDef.type === 'perspective') {\n      camera = new PerspectiveCamera(_Math.radToDeg(params.yfov), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6);\n    } else if (cameraDef.type === 'orthographic') {\n      camera = new OrthographicCamera(params.xmag / -2, params.xmag / 2, params.ymag / 2, params.ymag / -2, params.znear, params.zfar);\n    }\n\n    if (cameraDef.name !== undefined) camera.name = cameraDef.name;\n    assignExtrasToUserData(camera, cameraDef);\n    return Promise.resolve(camera);\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n   * @param {number} skinIndex\n   * @return {Promise<Object>}\n   */\n\n\n  GLTFParser.prototype.loadSkin = function (skinIndex) {\n    var skinDef = this.json.skins[skinIndex];\n    var skinEntry = {\n      joints: skinDef.joints\n    };\n\n    if (skinDef.inverseBindMatrices === undefined) {\n      return Promise.resolve(skinEntry);\n    }\n\n    return this.getDependency('accessor', skinDef.inverseBindMatrices).then(function (accessor) {\n      skinEntry.inverseBindMatrices = accessor;\n      return skinEntry;\n    });\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n   * @param {number} animationIndex\n   * @return {Promise<AnimationClip>}\n   */\n\n\n  GLTFParser.prototype.loadAnimation = function (animationIndex) {\n    var json = this.json;\n    var animationDef = json.animations[animationIndex];\n    var pendingNodes = [];\n    var pendingInputAccessors = [];\n    var pendingOutputAccessors = [];\n    var pendingSamplers = [];\n    var pendingTargets = [];\n\n    for (var i = 0, il = animationDef.channels.length; i < il; i++) {\n      var channel = animationDef.channels[i];\n      var sampler = animationDef.samplers[channel.sampler];\n      var target = channel.target;\n      var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\n      var input = animationDef.parameters !== undefined ? animationDef.parameters[sampler.input] : sampler.input;\n      var output = animationDef.parameters !== undefined ? animationDef.parameters[sampler.output] : sampler.output;\n      pendingNodes.push(this.getDependency('node', name));\n      pendingInputAccessors.push(this.getDependency('accessor', input));\n      pendingOutputAccessors.push(this.getDependency('accessor', output));\n      pendingSamplers.push(sampler);\n      pendingTargets.push(target);\n    }\n\n    return Promise.all([Promise.all(pendingNodes), Promise.all(pendingInputAccessors), Promise.all(pendingOutputAccessors), Promise.all(pendingSamplers), Promise.all(pendingTargets)]).then(function (dependencies) {\n      var nodes = dependencies[0];\n      var inputAccessors = dependencies[1];\n      var outputAccessors = dependencies[2];\n      var samplers = dependencies[3];\n      var targets = dependencies[4];\n      var tracks = [];\n\n      for (var i = 0, il = nodes.length; i < il; i++) {\n        var node = nodes[i];\n        var inputAccessor = inputAccessors[i];\n        var outputAccessor = outputAccessors[i];\n        var sampler = samplers[i];\n        var target = targets[i];\n        if (node === undefined) continue;\n        node.updateMatrix();\n        node.matrixAutoUpdate = true;\n        var TypedKeyframeTrack;\n\n        switch (PATH_PROPERTIES[target.path]) {\n          case PATH_PROPERTIES.weights:\n            TypedKeyframeTrack = NumberKeyframeTrack;\n            break;\n\n          case PATH_PROPERTIES.rotation:\n            TypedKeyframeTrack = QuaternionKeyframeTrack;\n            break;\n\n          case PATH_PROPERTIES.position:\n          case PATH_PROPERTIES.scale:\n          default:\n            TypedKeyframeTrack = VectorKeyframeTrack;\n            break;\n        }\n\n        var targetName = node.name ? node.name : node.uuid;\n        var interpolation = sampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : InterpolateLinear;\n        var targetNames = [];\n\n        if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\n          // Node may be a Group (glTF mesh with several primitives) or a Mesh.\n          node.traverse(function (object) {\n            if (object.isMesh === true && object.morphTargetInfluences) {\n              targetNames.push(object.name ? object.name : object.uuid);\n            }\n          });\n        } else {\n          targetNames.push(targetName);\n        }\n\n        var outputArray = outputAccessor.array;\n\n        if (outputAccessor.normalized) {\n          var scale;\n\n          if (outputArray.constructor === Int8Array) {\n            scale = 1 / 127;\n          } else if (outputArray.constructor === Uint8Array) {\n            scale = 1 / 255;\n          } else if (outputArray.constructor == Int16Array) {\n            scale = 1 / 32767;\n          } else if (outputArray.constructor === Uint16Array) {\n            scale = 1 / 65535;\n          } else {\n            throw new Error('THREE.GLTFLoader: Unsupported output accessor component type.');\n          }\n\n          var scaled = new Float32Array(outputArray.length);\n\n          for (var j = 0, jl = outputArray.length; j < jl; j++) {\n            scaled[j] = outputArray[j] * scale;\n          }\n\n          outputArray = scaled;\n        }\n\n        for (var j = 0, jl = targetNames.length; j < jl; j++) {\n          var track = new TypedKeyframeTrack(targetNames[j] + '.' + PATH_PROPERTIES[target.path], inputAccessor.array, outputArray, interpolation); // Override interpolation with custom factory method.\n\n          if (sampler.interpolation === 'CUBICSPLINE') {\n            track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline(result) {\n              // A CUBICSPLINE keyframe in glTF has three output values for each input value,\n              // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n              // must be divided by three to get the interpolant's sampleSize argument.\n              return new GLTFCubicSplineInterpolant(this.times, this.values, this.getValueSize() / 3, result);\n            }; // Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\n\n            track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n          }\n\n          tracks.push(track);\n        }\n      }\n\n      var name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\n      return new AnimationClip(name, undefined, tracks);\n    });\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n   * @param {number} nodeIndex\n   * @return {Promise<Object3D>}\n   */\n\n\n  GLTFParser.prototype.loadNode = function (nodeIndex) {\n    var json = this.json;\n    var extensions = this.extensions;\n    var parser = this;\n    var meshReferences = json.meshReferences;\n    var meshUses = json.meshUses;\n    var nodeDef = json.nodes[nodeIndex];\n    return function () {\n      var pending = [];\n\n      if (nodeDef.mesh !== undefined) {\n        pending.push(parser.getDependency('mesh', nodeDef.mesh).then(function (mesh) {\n          var node;\n\n          if (meshReferences[nodeDef.mesh] > 1) {\n            var instanceNum = meshUses[nodeDef.mesh]++;\n            node = mesh.clone();\n            node.name += '_instance_' + instanceNum; // onBeforeRender copy for Specular-Glossiness\n\n            node.onBeforeRender = mesh.onBeforeRender;\n\n            for (var i = 0, il = node.children.length; i < il; i++) {\n              node.children[i].name += '_instance_' + instanceNum;\n              node.children[i].onBeforeRender = mesh.children[i].onBeforeRender;\n            }\n          } else {\n            node = mesh;\n          } // if weights are provided on the node, override weights on the mesh.\n\n\n          if (nodeDef.weights !== undefined) {\n            node.traverse(function (o) {\n              if (!o.isMesh) return;\n\n              for (var i = 0, il = nodeDef.weights.length; i < il; i++) {\n                o.morphTargetInfluences[i] = nodeDef.weights[i];\n              }\n            });\n          }\n\n          return node;\n        }));\n      }\n\n      if (nodeDef.camera !== undefined) {\n        pending.push(parser.getDependency('camera', nodeDef.camera));\n      }\n\n      if (nodeDef.extensions && nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] && nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light !== undefined) {\n        pending.push(parser.getDependency('light', nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light));\n      }\n\n      return Promise.all(pending);\n    }().then(function (objects) {\n      var node; // .isBone isn't in glTF spec. See .markDefs\n\n      if (nodeDef.isBone === true) {\n        node = new Bone();\n      } else if (objects.length > 1) {\n        node = new Group();\n      } else if (objects.length === 1) {\n        node = objects[0];\n      } else {\n        node = new Object3D();\n      }\n\n      if (node !== objects[0]) {\n        for (var i = 0, il = objects.length; i < il; i++) {\n          node.add(objects[i]);\n        }\n      }\n\n      if (nodeDef.name !== undefined) {\n        node.userData.name = nodeDef.name;\n        node.name = PropertyBinding.sanitizeNodeName(nodeDef.name);\n      }\n\n      assignExtrasToUserData(node, nodeDef);\n      if (nodeDef.extensions) addUnknownExtensionsToUserData(extensions, node, nodeDef);\n\n      if (nodeDef.matrix !== undefined) {\n        var matrix = new Matrix4();\n        matrix.fromArray(nodeDef.matrix);\n        node.applyMatrix(matrix);\n      } else {\n        if (nodeDef.translation !== undefined) {\n          node.position.fromArray(nodeDef.translation);\n        }\n\n        if (nodeDef.rotation !== undefined) {\n          node.quaternion.fromArray(nodeDef.rotation);\n        }\n\n        if (nodeDef.scale !== undefined) {\n          node.scale.fromArray(nodeDef.scale);\n        }\n      }\n\n      return node;\n    });\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n   * @param {number} sceneIndex\n   * @return {Promise<Scene>}\n   */\n\n\n  GLTFParser.prototype.loadScene = function () {\n    // scene node hierachy builder\n    function buildNodeHierachy(nodeId, parentObject, json, parser) {\n      var nodeDef = json.nodes[nodeId];\n      return parser.getDependency('node', nodeId).then(function (node) {\n        if (nodeDef.skin === undefined) return node; // build skeleton here as well\n\n        var skinEntry;\n        return parser.getDependency('skin', nodeDef.skin).then(function (skin) {\n          skinEntry = skin;\n          var pendingJoints = [];\n\n          for (var i = 0, il = skinEntry.joints.length; i < il; i++) {\n            pendingJoints.push(parser.getDependency('node', skinEntry.joints[i]));\n          }\n\n          return Promise.all(pendingJoints);\n        }).then(function (jointNodes) {\n          node.traverse(function (mesh) {\n            if (!mesh.isMesh) return;\n            var bones = [];\n            var boneInverses = [];\n\n            for (var j = 0, jl = jointNodes.length; j < jl; j++) {\n              var jointNode = jointNodes[j];\n\n              if (jointNode) {\n                bones.push(jointNode);\n                var mat = new Matrix4();\n\n                if (skinEntry.inverseBindMatrices !== undefined) {\n                  mat.fromArray(skinEntry.inverseBindMatrices.array, j * 16);\n                }\n\n                boneInverses.push(mat);\n              } else {\n                console.warn('THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[j]);\n              }\n            }\n\n            mesh.bind(new Skeleton(bones, boneInverses), mesh.matrixWorld);\n          });\n          return node;\n        });\n      }).then(function (node) {\n        // build node hierachy\n        parentObject.add(node);\n        var pending = [];\n\n        if (nodeDef.children) {\n          var children = nodeDef.children;\n\n          for (var i = 0, il = children.length; i < il; i++) {\n            var child = children[i];\n            pending.push(buildNodeHierachy(child, node, json, parser));\n          }\n        }\n\n        return Promise.all(pending);\n      });\n    }\n\n    return function loadScene(sceneIndex) {\n      var json = this.json;\n      var extensions = this.extensions;\n      var sceneDef = this.json.scenes[sceneIndex];\n      var parser = this;\n      var scene = new Scene();\n      if (sceneDef.name !== undefined) scene.name = sceneDef.name;\n      assignExtrasToUserData(scene, sceneDef);\n      if (sceneDef.extensions) addUnknownExtensionsToUserData(extensions, scene, sceneDef);\n      var nodeIds = sceneDef.nodes || [];\n      var pending = [];\n\n      for (var i = 0, il = nodeIds.length; i < il; i++) {\n        pending.push(buildNodeHierachy(nodeIds[i], scene, json, parser));\n      }\n\n      return Promise.all(pending).then(function () {\n        return scene;\n      });\n    };\n  }();\n\n  return GLTFLoader;\n}();\n\nexport { GLTFLoader };","import \"core-js/modules/es6.weak-map\";\nimport \"core-js/modules/es6.typed.uint16-array\";\nimport \"core-js/modules/es6.typed.uint8-array\";\nimport \"core-js/modules/es6.typed.int32-array\";\nimport \"core-js/modules/es6.typed.int16-array\";\nimport \"core-js/modules/es6.typed.float32-array\";\nimport \"core-js/modules/es6.typed.uint32-array\";\nimport \"core-js/modules/es6.typed.int8-array\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.array.last-index-of\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es7.promise.finally\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.create\";\nimport \"core-js/modules/es6.object.assign\";\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\nimport { BufferAttribute, BufferGeometry, FileLoader, Loader } from \"../../../build/three.module.js\";\n\nvar DRACOLoader = function DRACOLoader(manager) {\n  Loader.call(this, manager);\n  this.decoderPath = '';\n  this.decoderConfig = {};\n  this.decoderBinary = null;\n  this.decoderPending = null;\n  this.workerLimit = 4;\n  this.workerPool = [];\n  this.workerNextTaskID = 1;\n  this.workerSourceURL = '';\n  this.defaultAttributeIDs = {\n    position: 'POSITION',\n    normal: 'NORMAL',\n    color: 'COLOR',\n    uv: 'TEX_COORD'\n  };\n  this.defaultAttributeTypes = {\n    position: 'Float32Array',\n    normal: 'Float32Array',\n    color: 'Float32Array',\n    uv: 'Float32Array'\n  };\n};\n\nDRACOLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: DRACOLoader,\n  setDecoderPath: function setDecoderPath(path) {\n    this.decoderPath = path;\n    return this;\n  },\n  setDecoderConfig: function setDecoderConfig(config) {\n    this.decoderConfig = config;\n    return this;\n  },\n  setWorkerLimit: function setWorkerLimit(workerLimit) {\n    this.workerLimit = workerLimit;\n    return this;\n  },\n\n  /** @deprecated */\n  setVerbosity: function setVerbosity() {\n    console.warn('THREE.DRACOLoader: The .setVerbosity() method has been removed.');\n  },\n\n  /** @deprecated */\n  setDrawMode: function setDrawMode() {\n    console.warn('THREE.DRACOLoader: The .setDrawMode() method has been removed.');\n  },\n\n  /** @deprecated */\n  setSkipDequantization: function setSkipDequantization() {\n    console.warn('THREE.DRACOLoader: The .setSkipDequantization() method has been removed.');\n  },\n  load: function load(url, onLoad, onProgress, onError) {\n    var _this = this;\n\n    var loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n\n    if (this.crossOrigin === 'use-credentials') {\n      loader.setWithCredentials(true);\n    }\n\n    loader.load(url, function (buffer) {\n      var taskConfig = {\n        attributeIDs: _this.defaultAttributeIDs,\n        attributeTypes: _this.defaultAttributeTypes,\n        useUniqueIDs: false\n      };\n\n      _this.decodeGeometry(buffer, taskConfig).then(onLoad)[\"catch\"](onError);\n    }, onProgress, onError);\n  },\n\n  /** @deprecated Kept for backward-compatibility with previous DRACOLoader versions. */\n  decodeDracoFile: function decodeDracoFile(buffer, callback, attributeIDs, attributeTypes) {\n    var taskConfig = {\n      attributeIDs: attributeIDs || this.defaultAttributeIDs,\n      attributeTypes: attributeTypes || this.defaultAttributeTypes,\n      useUniqueIDs: !!attributeIDs\n    };\n    this.decodeGeometry(buffer, taskConfig).then(callback);\n  },\n  decodeGeometry: function decodeGeometry(buffer, taskConfig) {\n    var _this2 = this;\n\n    // TODO: For backward-compatibility, support 'attributeTypes' objects containing\n    // references (rather than names) to typed array constructors. These must be\n    // serialized before sending them to the worker.\n    for (var attribute in taskConfig.attributeTypes) {\n      var type = taskConfig.attributeTypes[attribute];\n\n      if (type.BYTES_PER_ELEMENT !== undefined) {\n        taskConfig.attributeTypes[attribute] = type.name;\n      }\n    } //\n\n\n    var taskKey = JSON.stringify(taskConfig); // Check for an existing task using this buffer. A transferred buffer cannot be transferred\n    // again from this thread.\n\n    if (DRACOLoader.taskCache.has(buffer)) {\n      var cachedTask = DRACOLoader.taskCache.get(buffer);\n\n      if (cachedTask.key === taskKey) {\n        return cachedTask.promise;\n      } else if (buffer.byteLength === 0) {\n        // Technically, it would be possible to wait for the previous task to complete,\n        // transfer the buffer back, and decode again with the second configuration. That\n        // is complex, and I don't know of any reason to decode a Draco buffer twice in\n        // different ways, so this is left unimplemented.\n        throw new Error('THREE.DRACOLoader: Unable to re-decode a buffer with different ' + 'settings. Buffer has already been transferred.');\n      }\n    } //\n\n\n    var worker;\n    var taskID = this.workerNextTaskID++;\n    var taskCost = buffer.byteLength; // Obtain a worker and assign a task, and construct a geometry instance\n    // when the task completes.\n\n    var geometryPending = this._getWorker(taskID, taskCost).then(function (_worker) {\n      worker = _worker;\n      return new Promise(function (resolve, reject) {\n        worker._callbacks[taskID] = {\n          resolve: resolve,\n          reject: reject\n        };\n        worker.postMessage({\n          type: 'decode',\n          id: taskID,\n          taskConfig: taskConfig,\n          buffer: buffer\n        }, [buffer]); // this.debug();\n      });\n    }).then(function (message) {\n      return _this2._createGeometry(message.geometry);\n    }); // Remove task from the task list.\n\n\n    geometryPending[\"finally\"](function () {\n      if (worker && taskID) {\n        _this2._releaseTask(worker, taskID); // this.debug();\n\n      }\n    }); // Cache the task result.\n\n    DRACOLoader.taskCache.set(buffer, {\n      key: taskKey,\n      promise: geometryPending\n    });\n    return geometryPending;\n  },\n  _createGeometry: function _createGeometry(geometryData) {\n    var geometry = new BufferGeometry();\n\n    if (geometryData.index) {\n      geometry.setIndex(new BufferAttribute(geometryData.index.array, 1));\n    }\n\n    for (var i = 0; i < geometryData.attributes.length; i++) {\n      var attribute = geometryData.attributes[i];\n      var name = attribute.name;\n      var array = attribute.array;\n      var itemSize = attribute.itemSize;\n      geometry.setAttribute(name, new BufferAttribute(array, itemSize));\n    }\n\n    return geometry;\n  },\n  _loadLibrary: function _loadLibrary(url, responseType) {\n    var loader = new FileLoader(this.manager);\n    loader.setPath(this.decoderPath);\n    loader.setResponseType(responseType);\n    return new Promise(function (resolve, reject) {\n      loader.load(url, resolve, undefined, reject);\n    });\n  },\n  preload: function preload() {\n    this._initDecoder();\n\n    return this;\n  },\n  _initDecoder: function _initDecoder() {\n    var _this3 = this;\n\n    if (this.decoderPending) return this.decoderPending;\n    var useJS = typeof WebAssembly !== 'object' || this.decoderConfig.type === 'js';\n    var librariesPending = [];\n\n    if (useJS) {\n      librariesPending.push(this._loadLibrary('draco_decoder.js', 'text'));\n    } else {\n      librariesPending.push(this._loadLibrary('draco_wasm_wrapper.js', 'text'));\n      librariesPending.push(this._loadLibrary('draco_decoder.wasm', 'arraybuffer'));\n    }\n\n    this.decoderPending = Promise.all(librariesPending).then(function (libraries) {\n      var jsContent = libraries[0];\n\n      if (!useJS) {\n        _this3.decoderConfig.wasmBinary = libraries[1];\n      }\n\n      var fn = DRACOLoader.DRACOWorker.toString();\n      var body = ['/* draco decoder */', jsContent, '', '/* worker */', fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))].join('\\n');\n      _this3.workerSourceURL = URL.createObjectURL(new Blob([body]));\n    });\n    return this.decoderPending;\n  },\n  _getWorker: function _getWorker(taskID, taskCost) {\n    var _this4 = this;\n\n    return this._initDecoder().then(function () {\n      if (_this4.workerPool.length < _this4.workerLimit) {\n        var worker = new Worker(_this4.workerSourceURL);\n        worker._callbacks = {};\n        worker._taskCosts = {};\n        worker._taskLoad = 0;\n        worker.postMessage({\n          type: 'init',\n          decoderConfig: _this4.decoderConfig\n        });\n\n        worker.onmessage = function (e) {\n          var message = e.data;\n\n          switch (message.type) {\n            case 'decode':\n              worker._callbacks[message.id].resolve(message);\n\n              break;\n\n            case 'error':\n              worker._callbacks[message.id].reject(message);\n\n              break;\n\n            default:\n              console.error('THREE.DRACOLoader: Unexpected message, \"' + message.type + '\"');\n          }\n        };\n\n        _this4.workerPool.push(worker);\n      } else {\n        _this4.workerPool.sort(function (a, b) {\n          return a._taskLoad > b._taskLoad ? -1 : 1;\n        });\n      }\n\n      var worker = _this4.workerPool[_this4.workerPool.length - 1];\n      worker._taskCosts[taskID] = taskCost;\n      worker._taskLoad += taskCost;\n      return worker;\n    });\n  },\n  _releaseTask: function _releaseTask(worker, taskID) {\n    worker._taskLoad -= worker._taskCosts[taskID];\n    delete worker._callbacks[taskID];\n    delete worker._taskCosts[taskID];\n  },\n  debug: function debug() {\n    console.log('Task load: ', this.workerPool.map(function (worker) {\n      return worker._taskLoad;\n    }));\n  },\n  dispose: function dispose() {\n    for (var i = 0; i < this.workerPool.length; ++i) {\n      this.workerPool[i].terminate();\n    }\n\n    this.workerPool.length = 0;\n    return this;\n  }\n});\n/* WEB WORKER */\n\nDRACOLoader.DRACOWorker = function () {\n  var decoderConfig;\n  var decoderPending;\n\n  onmessage = function onmessage(e) {\n    var message = e.data;\n\n    switch (message.type) {\n      case 'init':\n        decoderConfig = message.decoderConfig;\n        decoderPending = new Promise(function (resolve\n        /*, reject*/\n        ) {\n          decoderConfig.onModuleLoaded = function (draco) {\n            // Module is Promise-like. Wrap before resolving to avoid loop.\n            resolve({\n              draco: draco\n            });\n          };\n\n          DracoDecoderModule(decoderConfig);\n        });\n        break;\n\n      case 'decode':\n        var buffer = message.buffer;\n        var taskConfig = message.taskConfig;\n        decoderPending.then(function (module) {\n          var draco = module.draco;\n          var decoder = new draco.Decoder();\n          var decoderBuffer = new draco.DecoderBuffer();\n          decoderBuffer.Init(new Int8Array(buffer), buffer.byteLength);\n\n          try {\n            var geometry = decodeGeometry(draco, decoder, decoderBuffer, taskConfig);\n            var buffers = geometry.attributes.map(function (attr) {\n              return attr.array.buffer;\n            });\n            if (geometry.index) buffers.push(geometry.index.array.buffer);\n            self.postMessage({\n              type: 'decode',\n              id: message.id,\n              geometry: geometry\n            }, buffers);\n          } catch (error) {\n            console.error(error);\n            self.postMessage({\n              type: 'error',\n              id: message.id,\n              error: error.message\n            });\n          } finally {\n            draco.destroy(decoderBuffer);\n            draco.destroy(decoder);\n          }\n        });\n        break;\n    }\n  };\n\n  function decodeGeometry(draco, decoder, decoderBuffer, taskConfig) {\n    var attributeIDs = taskConfig.attributeIDs;\n    var attributeTypes = taskConfig.attributeTypes;\n    var dracoGeometry;\n    var decodingStatus;\n    var geometryType = decoder.GetEncodedGeometryType(decoderBuffer);\n\n    if (geometryType === draco.TRIANGULAR_MESH) {\n      dracoGeometry = new draco.Mesh();\n      decodingStatus = decoder.DecodeBufferToMesh(decoderBuffer, dracoGeometry);\n    } else if (geometryType === draco.POINT_CLOUD) {\n      dracoGeometry = new draco.PointCloud();\n      decodingStatus = decoder.DecodeBufferToPointCloud(decoderBuffer, dracoGeometry);\n    } else {\n      throw new Error('THREE.DRACOLoader: Unexpected geometry type.');\n    }\n\n    if (!decodingStatus.ok() || dracoGeometry.ptr === 0) {\n      throw new Error('THREE.DRACOLoader: Decoding failed: ' + decodingStatus.error_msg());\n    }\n\n    var geometry = {\n      index: null,\n      attributes: []\n    }; // Gather all vertex attributes.\n\n    for (var attributeName in attributeIDs) {\n      var attributeType = self[attributeTypes[attributeName]];\n      var attribute;\n      var attributeID; // A Draco file may be created with default vertex attributes, whose attribute IDs\n      // are mapped 1:1 from their semantic name (POSITION, NORMAL, ...). Alternatively,\n      // a Draco file may contain a custom set of attributes, identified by known unique\n      // IDs. glTF files always do the latter, and `.drc` files typically do the former.\n\n      if (taskConfig.useUniqueIDs) {\n        attributeID = attributeIDs[attributeName];\n        attribute = decoder.GetAttributeByUniqueId(dracoGeometry, attributeID);\n      } else {\n        attributeID = decoder.GetAttributeId(dracoGeometry, draco[attributeIDs[attributeName]]);\n        if (attributeID === -1) continue;\n        attribute = decoder.GetAttribute(dracoGeometry, attributeID);\n      }\n\n      geometry.attributes.push(decodeAttribute(draco, decoder, dracoGeometry, attributeName, attributeType, attribute));\n    } // Add index.\n\n\n    if (geometryType === draco.TRIANGULAR_MESH) {\n      // Generate mesh faces.\n      var numFaces = dracoGeometry.num_faces();\n      var numIndices = numFaces * 3;\n      var index = new Uint32Array(numIndices);\n      var indexArray = new draco.DracoInt32Array();\n\n      for (var i = 0; i < numFaces; ++i) {\n        decoder.GetFaceFromMesh(dracoGeometry, i, indexArray);\n\n        for (var j = 0; j < 3; ++j) {\n          index[i * 3 + j] = indexArray.GetValue(j);\n        }\n      }\n\n      geometry.index = {\n        array: index,\n        itemSize: 1\n      };\n      draco.destroy(indexArray);\n    }\n\n    draco.destroy(dracoGeometry);\n    return geometry;\n  }\n\n  function decodeAttribute(draco, decoder, dracoGeometry, attributeName, attributeType, attribute) {\n    var numComponents = attribute.num_components();\n    var numPoints = dracoGeometry.num_points();\n    var numValues = numPoints * numComponents;\n    var dracoArray;\n    var array;\n\n    switch (attributeType) {\n      case Float32Array:\n        dracoArray = new draco.DracoFloat32Array();\n        decoder.GetAttributeFloatForAllPoints(dracoGeometry, attribute, dracoArray);\n        array = new Float32Array(numValues);\n        break;\n\n      case Int8Array:\n        dracoArray = new draco.DracoInt8Array();\n        decoder.GetAttributeInt8ForAllPoints(dracoGeometry, attribute, dracoArray);\n        array = new Int8Array(numValues);\n        break;\n\n      case Int16Array:\n        dracoArray = new draco.DracoInt16Array();\n        decoder.GetAttributeInt16ForAllPoints(dracoGeometry, attribute, dracoArray);\n        array = new Int16Array(numValues);\n        break;\n\n      case Int32Array:\n        dracoArray = new draco.DracoInt32Array();\n        decoder.GetAttributeInt32ForAllPoints(dracoGeometry, attribute, dracoArray);\n        array = new Int32Array(numValues);\n        break;\n\n      case Uint8Array:\n        dracoArray = new draco.DracoUInt8Array();\n        decoder.GetAttributeUInt8ForAllPoints(dracoGeometry, attribute, dracoArray);\n        array = new Uint8Array(numValues);\n        break;\n\n      case Uint16Array:\n        dracoArray = new draco.DracoUInt16Array();\n        decoder.GetAttributeUInt16ForAllPoints(dracoGeometry, attribute, dracoArray);\n        array = new Uint16Array(numValues);\n        break;\n\n      case Uint32Array:\n        dracoArray = new draco.DracoUInt32Array();\n        decoder.GetAttributeUInt32ForAllPoints(dracoGeometry, attribute, dracoArray);\n        array = new Uint32Array(numValues);\n        break;\n\n      default:\n        throw new Error('THREE.DRACOLoader: Unexpected attribute type.');\n    }\n\n    for (var i = 0; i < numValues; i++) {\n      array[i] = dracoArray.GetValue(i);\n    }\n\n    draco.destroy(dracoArray);\n    return {\n      name: attributeName,\n      array: array,\n      itemSize: numComponents\n    };\n  }\n};\n\nDRACOLoader.taskCache = new WeakMap();\n/** Deprecated static methods */\n\n/** @deprecated */\n\nDRACOLoader.setDecoderPath = function () {\n  console.warn('THREE.DRACOLoader: The .setDecoderPath() method has been removed. Use instance methods.');\n};\n/** @deprecated */\n\n\nDRACOLoader.setDecoderConfig = function () {\n  console.warn('THREE.DRACOLoader: The .setDecoderConfig() method has been removed. Use instance methods.');\n};\n/** @deprecated */\n\n\nDRACOLoader.releaseDecoderModule = function () {\n  console.warn('THREE.DRACOLoader: The .releaseDecoderModule() method has been removed. Use instance methods.');\n};\n/** @deprecated */\n\n\nDRACOLoader.getDecoderModule = function () {\n  console.warn('THREE.DRACOLoader: The .getDecoderModule() method has been removed. Use instance methods.');\n};\n\nexport { DRACOLoader };","import React, { Suspense } from \"react\"\n\nimport * as THREE from \"three\"\nimport { Canvas, useLoader, useFrame, Dom } from \"react-three-fiber\"\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\nimport getPrefixedPath from \"../../getPrefixedPath\"\nimport { DRACOLoader } from \"three/examples/jsm/loaders/DRACOLoader\"\nimport { Vector3 } from \"three\"\nconst modelUrl = getPrefixedPath(\"/models/skull/scene.gltf\")\n\nexport default () => {\n  const skullPosition = [0, 0.5, -5]\n  return (\n    <Canvas>\n      <directionalLight\n        intensity={2}\n        position={[50, -50, 100]}\n        lookAt={new THREE.Vector3(...skullPosition)}\n      />\n      <Suspense\n        fallback={\n          <Dom center>\n            <div>loading</div>\n          </Dom>\n        }\n      >\n        <Skull position={skullPosition} />\n      </Suspense>\n    </Canvas>\n  )\n}\n\nconst Skull = ({ position }) => {\n  const gltf = useLoader(GLTFLoader, modelUrl, loader => {\n    const dracoLoader = new DRACOLoader()\n    dracoLoader.setDecoderPath(\"/draco-gltf\")\n    loader.setDRACOLoader(dracoLoader)\n  })\n  const ref = React.useRef()\n  useFrame(() => {\n    const { current } = ref\n    current.rotation.y += 0.03\n  })\n  return (\n    <group\n      ref={ref}\n      position={position}\n      scale={[5, 5, 5]}\n      rotation={[0.2, 0, 0]}\n    >\n      <primitive object={gltf.scene} />\n    </group>\n  )\n}\n","import React from \"react\"\nimport Experiment from \"../../components/experiment\"\nimport Scene from \"../../components/scenes/GltfModelScene\"\n\nexport default ({ children, width, height }) => {\n  return (\n    <Experiment width={250} height={250} title=\"GLTF Model\">\n      <Scene />\n    </Experiment>\n  )\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n"],"sourceRoot":""}